services:
  caddy:
    image: caddy:2.7-alpine
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 443:443/udp # HTTP/3
    environment:
      - ACME_AGREE=true
      - DOMAIN=${DOMAIN:-statusframe.com}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - uplitycs_network
    depends_on:
      - app
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: statusframe:latest
    restart: unless-stopped
    environment:
      APP_ENV: production
      PORT: 8080
    ports:
      - 8080:8080
    env_file: .env
    networks:
      - uplitycs_network
    depends_on:
      - db 

  db:
    image: postgres:15-alpine
    restart: unless-stopped
    env_file: .env
    networks:
      - uplitycs_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
volumes:
  caddy_data:
  caddy_config:
  postgres_data:

networks:
  uplitycs_network:
    driver: bridge